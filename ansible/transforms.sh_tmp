#!/bin/bash
# set  -e

username=$1
ansible_dir="${HOME}/skyhook-ansible/ansible/"
scripts_dir="${HOME}/pdsw19-reprod/scripts/"
data_dir="${HOME}/pdsw19-reprod/data/"
reprod_dir="${HOME}/pdsw19-reprod/"

python - << END
import os
addrs = []
print "copy scripts to all nodes"
with open('nodes.txt','r') as f :
  for line in f :
    line = line.rstrip()
    if not line : continue
    line = line.split()
    addr = line[1]
    addr = addr.split("=")
    addr = addr[1]
    addrs.append( addr )

for i in range( 0, len( addrs ) ) :
  python "copy scripts dir to node " + i
  os.system( "scp -o StrictHostKeyChecking=no -r ${scripts_dir}/*  ${username}@" + i + ":~/ ;" )
END

#echo "setup ansible prereqs via script, and install other small stuff locally...";
#bash postreqs.sh;
#
#echo "specify correct num osds for this cluster in ansible hosts file";
#cp $reprod_dir/geni/hosts $ansible_dir/lib/ceph-deploy-ansible/ansible/hosts;
#
#echo "VERIFY osds all there"
#cat $ansible_dir/lib/ceph-deploy-ansible/ansible/hosts;
#
#echo "update the max_osd here /vars/extra_vars.yml  as well."
#head -n 4 $ansible_dir/lib/ceph-deploy-ansible/ansible/vars/extra_vars.yml >>   $ansible_dir/lib/ceph-deploy-ansible/ansible/vars/tmp.yml;
#echo "num_osds: ${nosds}" >>$ansible_dir/lib/ceph-deploy-ansible/ansible/vars/tmp.yml;
#mv $ansible_dir/lib/ceph-deploy-ansible/ansible/vars/tmp.yml $ansible_dir/lib/ceph-deploy-ansible/ansible/vars/extra_vars.yml;
#rm -rf $ansible_dir/lib/ceph-deploy-ansible/ansible/vars/tmp.yml;
#
#echo "visually  verify all sda4 mounted at /mnt/sda4.";
#cd $HOME
#for n in `cat nodes.txt`; do
#  echo $n
#  ssh -o StrictHostKeyChecking=no $n "df -h | grep sda4;";
#done;
#sleep 3s;
#
## INSTALLING VANILLA CEPH LUMINOUS on all nodes client+osds and cls_tabular lib
#echo `date`;
#echo "run ansible playbook to install vanilla ceph luminous on cluster!";
#cd $ansible_dir;
#time ansible-playbook transforms_setup_playbook.yml ;
#echo `date`;
#echo "ansible playbook done.";
#sleep 10s;
#
## -------------------------------------------------------------------- #
## COMPILE BINARIES FOR TRANSFORM TESTS
## -------------------------------------------------------------------- #
#cd /mnt/sda4/skyhookdm-ceph/build ;
#cp ${HOME}/pdsw19-reprod/data/* . ;
#make -j36 fbwriter run-query run-copyfrom-merge run-client-merge ;
#
## -------------------------------------------------------------------- #
## WRITE 10MB OBJECT FILES
## -------------------------------------------------------------------- #
#bin/fbwriter --file_name ncols100.10MB.objs.25Krows.csv --schema_file_name ncols100.schema.txt --num_objs 1 --flush_rows 25000 --read_rows 25000 --csv_delim "|" --use_hashing false --rid_start_value 1 --table_name ncols100_10MB --input_oid 0 --obj_type SFT_FLATBUF_FLEX_ROW ;
#
#bin/fbwriter --file_name lineitem.10MB.objs.75Krows.csv --schema_file_name lineitem.schema.txt --num_objs 1 --flush_rows 75000 --read_rows 75000 --csv_delim "|" --use_hashing false --rid_start_value 1 --table_name lineitem_10MB --input_oid 0 --obj_type SFT_FLATBUF_FLEX_ROW ;
#
## -------------------------------------------------------------------- #
## WRITE 100MB OBJECT FILES
## -------------------------------------------------------------------- #
#for ((i = 0 ; i < 10 ; i++)); do
#  cat ncols100.10MB.objs.25Krows.csv >> ncols100.100MB.objs.250Krows.csv ;
#done;
#bin/fbwriter --file_name ncols100.100MB.objs.250Krows.csv --schema_file_name ncols100.schema.txt --num_objs 1 --flush_rows 250000 --read_rows 250000 --csv_delim "|" --use_hashing false --rid_start_value 1 --table_name ncols100_100MB --input_oid 0 --obj_type SFT_FLATBUF_FLEX_ROW ;
#
#for ((i = 0 ; i < 10 ; i++)); do
#  cat lineitem.10MB.objs.75Krows.csv >> lineitem.100MB.objs.750Krows.csv ;
#done;
#bin/fbwriter --file_name lineitem.100MB.objs.750Krows.csv --schema_file_name lineitem.schema.txt --num_objs 1 --flush_rows 750000 --read_rows 750000 --csv_delim "|" --use_hashing false --rid_start_value 1 --table_name lineitem_100MB --input_oid 0 --obj_type SFT_FLATBUF_FLEX_ROW ;
